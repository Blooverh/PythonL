* Data visualization
    >> Involves exploring data through visual representations
    >> Closely associated with data analysis, which uses code to explore patterns and connections in a data set
    ** DATA SET -> can be made up of small list on numbers that fits in one line of code or it can Gbs of data 

MATPLOTLIB -> python library for mathematical plotting 
Plotly package -> generates visualizations that work well on digital devices, generates visualizations that automatically resize to fit a variety of display devices

Installing matplotlib -> pip install matplotlib

fig, ax= plt.subplots():
    ** .subplots() function can generate one or more plots in the same fig (figure)
    ** variable fig -> represents an entire figure or collection of plots that are generated 
    ** ax -> represents a single plot in the figure and is the variable we'll used most of the time 
    ** plot() method -> will try to plot the data given in a meaningful way
    ** plt.show -> opens matplotlib's viewer and displays the plot 

* Defining Custom colors 
    >> To change the color of the points, pass c to scatter() method, with the same name of a color in quotation marks.
        ax.scatter(x_values, y_values, c='red', s=10)

* Using a colormap
    ** COLORMAP is a series of colors in a gradient that moves from a starting to an ending color. We use colormaps in visualizations to emphasize a pattern in the data.
    ** pyplot module includes a set of built in colormaps. 
    ax.scatter(x_val,y_val,c=y_val, cmap=plt.cm.Blues,s=10)

* Saving plors automatically 
    plt.savefig('squares_plot.py', bbox_inches='tight')

* RANDOM WALKS
    ** random walk is a path that has no clear direction but is determined by a series of random decisions, each of which is left entirely to chance 
    ** Random walks have practical applications in nature, physics, biology, chemistry and economics.

* Altering the size to fill the screen
    fig, ax= plt.subplots(figsize=(15,9)) -> figsize parameter takes a tuple, which tells matplotlib the dimensions of the plotting window in inches
    Matplotlib assumes that the screen resolution is 100 pixesl per inch
        if the code does not give an accurate plot size, adjust the numbers as necessary
        
*** ROLLING DICE WITH PLOTLY 
    Plotly package produces interactive visualizations. Plotly is particularly useful when creating visualizations that will be displayed in a browser, because the visualizations will scale automatically to fit viewer's screen